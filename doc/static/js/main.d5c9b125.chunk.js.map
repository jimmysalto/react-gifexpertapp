{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAMlB,SACI,uBACQO,KAAK,OACLC,MAAOT,EACPU,SAnBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAyB/BZ,EAAYe,UAAY,CACpBd,c,OAAce,EAAUC,KAAKC,Y,mCChCpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAZtB,kBAeXM,GAfW,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OAFAc,QAAQC,IAAIN,EAAGC,EAAMV,GAGjB,sBAAKgB,UAAU,uBAAf,UACG,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,8BAAIA,EAAJ,WCHES,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZlB,mBAAS,CAC/ByB,KAAK,GACLe,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAdAC,qBAAW,WACH1B,EAAQC,GACH0B,MAAM,SAAAC,GACEH,EAAS,CACNjB,KAAKoB,EACLL,SAAQ,SAI1B,CAACtB,IAKAuB,EDjBwBK,CAAa5B,GAAhCa,EAFuB,EAE5BN,KAAae,EAFe,EAEfA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,mCAAd,SACKlB,IAEJsB,GAAW,mBAAGJ,UAAU,kCAAb,qBACX,qBAAKA,UAAU,YAAf,SAEOL,EAAOJ,KACC,SAAAC,GAAG,OAAM,cAAC,EAAD,eAEDA,GADCA,EAAIC,aEdxBkB,EAAe,WAAO,IAAD,EAEM/C,mBAAU,IAFhB,mBAEvBgD,EAFuB,KAEXjD,EAFW,KAU9B,OACI,qCACI,8CAGA,uBACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAEQiD,EAAWrB,KACP,SAAAT,GAAQ,OAAK,cAAC,EAAD,CAETA,SAAUA,GADLA,Y,MCrBjC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d5c9b125.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length>2){\r\n            setCategories( cats => [inputValue,...cats])\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n            /> \r\n        </form> \r\n    );\r\n}\r\n\r\n\r\nAddCategory.prototype = {\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category)=>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=R08ksrEzdL8G8boyaqB5mfGW2DBOyYz8`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=> {\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n     return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log(id,title,url);\r\n\r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n           <img src={url} alt={title}></img>\r\n           <p>{title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n \r\nexport const GifGrid = ({category}) => {\r\n \r\n    const {data:images, loading} = useFetchGifs(category);\r\n \r\n    return (\r\n        <> \r\n        <h3 className=\"animate_animated animate__fadeIn\">\r\n            {category}\r\n        </h3>\r\n        {loading && <p className=\"animate_animated animate__flash\">Loading</p> }\r\n         <div className=\"card-grid\"> \r\n            { \r\n                images.map(\r\n                        img => ( <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                            /> )\r\n                        )\r\n            }\r\n                \r\n                \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n            getGifs(category)\r\n                .then( imgs => { \r\n                         setState({\r\n                            data:imgs,\r\n                            loading:false\r\n                        }); \r\n                }\r\n            ); \r\n        },[category]\r\n\r\n    )\r\n\r\n  \r\n    return state;\r\n}\r\n","import React,{useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( []);\r\n    /* \r\n    const handleAdd = () =>{\r\n         setCategories(\r\n             [...categories,'Naruto']\r\n         );\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2> \r\n                GifExpertApp\r\n            </h2>\r\n            <hr/>   \r\n            <AddCategory setCategories={ setCategories }/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(\r\n                        category => (<GifGrid \r\n                            key={category}\r\n                            category={category}/> )\r\n                         \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp /> ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}